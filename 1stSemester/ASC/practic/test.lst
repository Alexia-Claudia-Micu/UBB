     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fread, fopen, fclose, printf              
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fclose msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import fread msvcrt.dll    
    12                                  import printf msvcrt.dll    
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 00<rept>                    descriptor times 30 db 0
    17 0000001E 726561642E74787400          file_name db "read.txt", 0
    18 00000027 7200                        access_mode db "r", 0
    19 00000029 00000000                    char dd 0
    20 0000002D 6165696F754145494F-         vocale db "aeiouAEIOU", 0
    20 00000036 5500               
    21 00000038 00000000                    nr_voc dd 0
    22 0000003C 4E756D626572206F66-         format dd "Number of vocals: %d, they are: %s", 0
    22 00000045 20766F63616C733A20-
    22 0000004E 25642C207468657920-
    22 00000057 6172653A2025730000-
    22 00000060 00000000           
    23 00000064 00<rept>                    text times 100 db 0
    24                                      
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[27000000]                    push dword access_mode
    29 00000005 68[1E000000]                    push dword file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33 00000013 A3[00000000]                    mov [descriptor], eax
    34 00000018 83F800                          cmp eax, 0
    35 0000001B 746D                            je final
    36                                          
    37 0000001D FC                              cld
    38 0000001E BF[64000000]                    mov edi, text
    39                                          
    40                                          read:
    41 00000023 FF35[00000000]                      push dword [descriptor]
    42 00000029 6A01                                push dword 1
    43 0000002B 6A01                                push dword 1
    44 0000002D 68[29000000]                        push dword char
    45 00000032 FF15[00000000]                      call [fread]
    46 00000038 83C410                              add esp, 4*4
    47                                              
    48 0000003B A1[29000000]                        mov eax, [char]
    49 00000040 83F821                              cmp eax, '!'
    50 00000043 7420                                je file_done
    51                                              
    52 00000045 FC                                  cld
    53 00000046 BE[2D000000]                        mov esi, vocale
    54 0000004B B90A000000                          mov ecx, 10
    55                                              iterate_vocals:
    56                                              
    57 00000050 AC                                      lodsb
    58 00000051 3A05[29000000]                          cmp al, [char]
    59 00000057 7508                                    jne not_voc
    60 00000059 8305[38000000]01                            add dword [nr_voc], 1
    61 00000060 AA                                          stosb
    62                                                  not_voc:
    63 00000061 E2ED                                loop iterate_vocals
    64                                              
    65 00000063 EBBE                            jmp read
    66                                          
    67                                          file_done:
    68 00000065 FF35[00000000]                      push dword [descriptor]
    69 0000006B FF15[00000000]                      call [fclose]
    70                                          
    71 00000071 68[64000000]                    push dword text
    72 00000076 FF35[38000000]                  push dword [nr_voc]
    73 0000007C 68[3C000000]                    push dword format
    74 00000081 FF15[00000000]                  call [printf]
    75 00000087 83C408                          add esp, 4*2
    76                                  
    77                                          
    78                                          final:
    79                                          ; exit(0)
    80 0000008A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    81 0000008C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
