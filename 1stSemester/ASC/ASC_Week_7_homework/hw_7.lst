     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit             
     6                                  import exit msvcrt.dll    
     7                                  
     8                                  segment data use32 class=data
     9                                  ;Se da un sir de caractere S. Sa se construiasca sirul D care sa contina toate caracterele speciale (!@#$%^&*) din sirul S.
    10                                  
    11 00000000 2B3240613433242A        s db '+', '2', '@', 'a', '4', '3', '$', '*'
    12                                  lenS equ $ - s
    13 00000008 00<rept>                d times lenS db 0
    14 00000010 21402324255E262A        sc db '!','@','#','$','%','^','&','*'
    15                                  lenSC equ $ - sc
    16 00000018 0000                    c dw 0
    17 0000001A 00000000                s1 dd 0
    18 0000001E 00000000                s2 dd 0
    19                                  
    20                                  ;Se dau 2 siruri de octeti S1 si S2 de aceeasi lungime. 
    21                                  ;Sa se construiasca sirul D astfel incat fiecare element
    22                                  ; din D sa reprezinte maximul dintre elementele de pe
    23                                  ;pozitiile corespunzatoare din S1 si S2.
    24                                  
    25 00000022 010306020307            sir1 db 1,3,6,2,3,7
    26 00000028 060308010205            sir2 db 6,3,8,1,2,5
    27                                  lenSir equ $ - sir2
    28 0000002E 00<rept>                d1 times lenSir db 0
    29                                  
    30                                  segment code use32 class=code
    31                                      start:
    32                                          
    33 00000000 B900000000                      mov ecx, 0
    34 00000005 66B90800                        mov cx, lenS
    35 00000009 BE00000000                      mov esi, 0
    36 0000000E BA00000000                      mov edx, 0
    37 00000013 67E350                          jcxz sf
    38                                          iterate_string:
    39 00000016 8A86[00000000]                      mov al, [s+esi]
    40                                             
    41 0000001C 66890D[18000000]                    mov [c], cx
    42 00000023 66B90800                            mov cx, lenSC
    43 00000027 8935[1A000000]                      mov [s1], esi
    44 0000002D BE00000000                          mov esi, 0
    45                                              
    46                                              iterate_special_char:
    47 00000032 8A9E[10000000]                          mov bl, [sc+esi]
    48 00000038 38D8                                    cmp al, bl
    49                                                  
    50 0000003A 7517                                    jnz dont_add
    51 0000003C 8935[1E000000]                              mov [s2], esi
    52 00000042 89D6                                        mov esi, edx
    53 00000044 8886[08000000]                              mov [d+esi], al
    54 0000004A 8B35[1E000000]                              mov esi, [s2]
    55 00000050 83C201                                      add edx, 1
    56                                                      
    57                                                  dont_add:
    58 00000053 46                                      inc esi
    59                                                  
    60 00000054 E2DC                                loop iterate_special_char            
    61                                              
    62 00000056 8B35[1A000000]                      mov esi, [s1]
    63 0000005C 668B0D[18000000]                    mov cx, [c]
    64                                                              
    65 00000063 46                                  inc esi
    66 00000064 E2B0                            loop iterate_string
    67                                          sf:
    68                                          
    69 00000066 B900000000                      mov ecx, 0
    70 0000006B 66B90600                        mov cx, lenSir
    71 0000006F BE00000000                      mov esi, 0
    72 00000074 E31B                            jecxz sf1
    73                                          iterate_array:
    74 00000076 8A86[22000000]                      mov al, [sir1+esi]
    75 0000007C 8AA6[28000000]                      mov ah, [sir2+esi]
    76 00000082 38E0                                cmp al, ah
    77 00000084 7302                                jae move_al
    78 00000086 88E0                                mov al, ah
    79                                              move_al:
    80 00000088 8886[2E000000]                      mov [d1+esi], al            
    81 0000008E 46                                  inc esi
    82 0000008F E2E5                            loop iterate_array
    83                                          sf1:
    84                                          
    85 00000091 6A00                            push    dword 0   
    86 00000093 FF15[00000000]                  call    [exit]    
