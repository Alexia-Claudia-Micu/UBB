     1                                  ; The following code will open a file called "ana.txt" from current folder,
     2                                  ; it will read maximum 100 characters from this file,
     3                                  ; and it will display to the console the number of chars and the text we've read.
     4                                  
     5                                  ; The program will use:
     6                                  ; - the function fopen() to open/create the file
     7                                  ; - the function fread() to read from file
     8                                  ; - the function printf() to display a text
     9                                  ; - the function fclose() to close the created file.
    10                                  
    11                                  ; Because the fopen() call uses the file access mode "r", the file will be open for
    12                                  ; reading. The file must exist, otherwise the fopen() call will fail.
    13                                  ; For details about the file access modes see the section "Theory".
    14                                  
    15                                  ; Any string used by printf() must be null-terminated ('\0').
    16                                  
    17                                  bits 32
    18                                  
    19                                  global start
    20                                  
    21                                  ; declare external functions needed by our program
    22                                  extern exit, fopen, fread, fclose, printf, scanf, fprintf
    23                                  import exit msvcrt.dll
    24                                  import fopen msvcrt.dll
    25                                  import fread msvcrt.dll
    26                                  import fclose msvcrt.dll
    27                                  import printf msvcrt.dll
    28                                  import scanf msvcrt.dll
    29                                  import fprintf msvcrt.dll
    30                                  
    31                                  ; our data is declared here (the variables needed by our program)z
    32                                  segment data use32 class=data
    33 00000000 7072696E742E747874-         file_name db "print.txt", 0   ; filename to be read
    33 00000009 00                 
    34 0000000A 6100                        access_mode db "a", 0       ; file access mode:
    35                                                                  ; r - opens a file for reading. The file must exist.
    36 0000000C FFFFFFFF                    file_descriptor dd -1       ; variable to hold the file descriptor
    37                                      len equ 100                 ; maximum number of characters to read
    38 00000010 00000000<rept>              text times 100 dd 0    ; string to hold the text which is read from file
    39 000001A0 576527766520726561-         format db "We've read %d chars from file. The text is: %s", 0
    39 000001A9 642025642063686172-
    39 000001B2 732066726F6D206669-
    39 000001BB 6C652E205468652074-
    39 000001C4 6578742069733A2025-
    39 000001CD 7300               
    40 000001CF 257300                      formats  db "%s", 0
    41 000001D2 256400                      formatd  db "%d", 0
    42                                  
    43                                  ; our code starts here
    44                                  segment code use32 class=code
    45                                      start:
    46                                          read:
    47 00000000 68[10000000]                    push dword text
    48 00000005 68[D2010000]                    push dword formatd
    49 0000000A FF15[00000000]                  call [scanf]
    50 00000010 83C408                          add esp, 4*2
    51                                          
    52 00000013 833D[10000000]00                cmp dword[text], 0
    53 0000001A 746A                            je final
    54                                          
    55 0000001C 66A1[10000000]                  mov ax, [text]
    56 00000022 668B15[12000000]                mov dx, [text+2]
    57 00000029 66BB0700                        mov bx, 7
    58 0000002D 66F7F3                          div bx
    59 00000030 6683FA00                        cmp dx, 0
    60 00000034 7404                            jz print_nr
    61 00000036 EBC8                            jmp read
    62                                          
    63 00000038 EB4C                            jmp final
    64                                          print_nr:
    65 0000003A 60                              pushad
    66 0000003B 68[0A000000]                    push dword access_mode     
    67 00000040 68[00000000]                    push dword file_name
    68 00000045 FF15[00000000]                  call [fopen]
    69 0000004B 83C408                          add esp, 4*2                ; clean-up the stack
    70                                  
    71 0000004E A3[0C000000]                    mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    72                                          
    73                                          ; check if fopen() has successfully created the file (EAX != 0)
    74 00000053 83F800                          cmp eax, 0
    75 00000056 742E                            je final
    76                                  
    77                                          ; write the text to file using fprintf()
    78                                          ; fprintf(file_descriptor, text)
    79 00000058 68[10000000]                    push dword text
    80 0000005D 68[CF010000]                    push dword formats
    81 00000062 FF35[0C000000]                  push dword [file_descriptor]
    82 00000068 FF15[00000000]                  call [fprintf]
    83 0000006E 83C40C                          add esp, 4*3
    84                                  
    85                                          ; call fclose() to close the file
    86                                          ; fclose(file_descriptor)
    87 00000071 FF35[0C000000]                  push dword [file_descriptor]
    88 00000077 FF15[00000000]                  call [fclose]
    89 0000007D 83C404                          add esp, 4
    90 00000080 61                              popad
    91 00000081 E97AFFFFFF                      jmp read
    92                                  
    93                                        final:
    94                                  
    95                                          ; exit(0)
    96 00000086 6A00                            push dword 0
    97 00000088 FF15[00000000]                  call [exit]
