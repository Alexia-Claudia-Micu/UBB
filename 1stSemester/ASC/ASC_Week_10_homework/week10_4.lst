     1                                  ; The following code will create an empty file called "ana.txt" in the current folder,
     2                                  ; and it will write a text to this file.
     3                                  
     4                                  ; The program will use:
     5                                  ; - the function fopen() to open/create the file
     6                                  ; - the function fprintf() to write a text to file
     7                                  ; - the function fclose() to close the created file.
     8                                  
     9                                  ; Because the program uses the file access mode "w", if a file with the same name already
    10                                  ; exists, its contents will be discarded and the file will be treated as a new empty file.
    11                                  ; For details about the file access modes see the section "Theory".
    12                                  
    13                                  bits 32
    14                                  
    15                                  global start
    16                                  
    17                                  ; declare external functions needed by our program
    18                                  extern exit, fopen, fprintf, fclose, scanf
    19                                  import exit msvcrt.dll
    20                                  import fopen msvcrt.dll
    21                                  import fprintf msvcrt.dll
    22                                  import fclose msvcrt.dll
    23                                  import scanf msvcrt.dll   
    24                                  
    25                                  ; our data is declared here (the variables needed by our program)
    26                                  segment data use32 class=data
    27 00000000 6E756D6572655F372E-         file_name db "numere_7.txt", 0   ; filename to be created
    27 00000009 74787400           
    28 0000000D 7700                        access_mode db "w", 0       ; file access mode:
    29                                                                  ; w - creates an empty file for writing
    30 0000000F FFFFFFFF                    file_descriptor dd -1       ; variable to hold the file descriptor
    31 00000013 2C2000                      text db ", ", 0  ; text to be write to file
    32 00000016 256400                      formatd  db "%d", 0  ; %d <=> a decimal number (base 10)
    33 00000019 00000000                    a dd 0
    34                                  
    35                                  ; our code starts here
    36                                  segment code use32 class=code
    37                                      start:
    38                                          ; call fopen() to create the file
    39                                          ; fopen() will return a file descriptor in the EAX or 0 in case of error
    40                                          ; eax = fopen(file_name, access_mode)
    41 00000000 68[0D000000]                    push dword access_mode     
    42 00000005 68[00000000]                    push dword file_name
    43 0000000A FF15[00000000]                  call [fopen]
    44 00000010 83C408                          add esp, 4*2                ; clean-up the stack
    45                                  
    46 00000013 A3[0F000000]                    mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    47                                          
    48                                          ; check if fopen() has successfully created the file (EAX != 0)
    49 00000018 83F800                          cmp eax, 0
    50 0000001B 7472                            je final
    51                                  
    52                                          ; write the text to file using fprintf()
    53                                          ; fprintf(file_descriptor, text)
    54                                          
    55                                          read:
    56 0000001D 60                              pushad
    57 0000001E 68[19000000]                    push dword a       ; ! addressa of n, not value
    58 00000023 68[16000000]                    push dword formatd
    59 00000028 FF15[00000000]                  call [scanf]       ; call function scanf for reading
    60 0000002E 83C408                          add esp, 4 * 2     ; free parameters on the stack
    61 00000031 833D[19000000]00                cmp dword [a], 0
    62 00000038 7446                            je here
    63                                          
    64 0000003A 66A1[19000000]                  mov ax, [a]
    65 00000040 668B15[1B000000]                mov dx, [a+2]
    66 00000047 66BB0700                        mov bx, 7
    67 0000004B 66F7F3                          div bx
    68 0000004E 6683FA00                        cmp dx, 0
    69                                          
    70 00000052 61                              popad
    71 00000053 7529                            jne not_equal
    72                                          
    73 00000055 FF35[19000000]                  push dword [a]
    74 0000005B FF35[0F000000]                  push dword [file_descriptor]
    75 00000061 FF15[00000000]                  call [fprintf]
    76 00000067 83C408                          add esp, 4*2
    77 0000006A 68[13000000]                    push dword text
    78 0000006F FF35[0F000000]                  push dword [file_descriptor]
    79 00000075 FF15[00000000]                  call [fprintf]
    80 0000007B 83C408                          add esp, 4*2
    81                                          
    82                                          not_equal:
    83                                          
    84 0000007E EB9D                            jmp read
    85                                          here:
    86                                          
    87                                          
    88                                          
    89                                          
    90                                          ; call fclose() to close the file
    91                                          ; fclose(file_descriptor)
    92 00000080 FF35[0F000000]                  push dword [file_descriptor]
    93 00000086 FF15[00000000]                  call [fclose]
    94 0000008C 83C404                          add esp, 4
    95                                  
    96                                        final:
    97                                  
    98                                          ; exit(0)
    99 0000008F 6A00                            push dword 0      
   100 00000091 FF15[00000000]                  call [exit]
