     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  ; declare extern functions used by the programme
     6                                  extern exit, printf, scanf ; add printf and scanf as extern functions            
     7                                  import exit msvcrt.dll    
     8                                  import printf msvcrt.dll    ; tell the assembler that function printf is found in msvcrt.dll library
     9                                  import scanf msvcrt.dll     ; similar for scanf
    10                                                            
    11                                  segment data use32 class=data
    12 00000000 0000000000000000        	n dq  0       ; in this variable we'll store the value read from the keyboard
    13                                      ; char strings are of type byte
    14 00000008 737472696E673D00        	message  db "string=", 0  ; char strings for C functions must terminate with 0(value, not char)
    15 00000010 257300                  	format  db "%s", 0  ; %d <=> a decimal number (base 10)
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19                                         
    20                                          ; will call printf(message) => will print "n="
    21                                          ; place parameters on stack
    22 00000000 68[08000000]                    push dword message ; ! on the stack is placed the address of the string, not its value
    23 00000005 FF15[00000000]                  call [printf]      ; call function printf for printing
    24 0000000B 83C404                          add esp, 4*1       ; free parameters on the stack; 4 = size of dword; 1 = number of parameters
    25                                                                                     
    26                                          ; will call scanf(format, n) => will read a number in variable n
    27                                          ; place parameters on stack from right to left
    28 0000000E 68[00000000]                    push dword n 
    29 00000013 68[04000000]                    push dword n + 4; ! addressa of n, not value
    30 00000018 68[10000000]                    push dword format
    31 0000001D FF15[00000000]                  call [scanf]       ; call function scanf for reading
    32 00000023 83C410                          add esp, 4 * 4     ; free parameters on the stack
    33                                                             ; 4 = size of a dword; 2 = no of perameters
    34                                          
    35                                          ; exit(0)
    36 00000026 6A00                            push dword 0      ; place on stack parameter for exit
    37 00000028 FF15[00000000]                  call [exit]       ; call exit to terminate the program
