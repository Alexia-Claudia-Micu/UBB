from random import randint
def check_nr(c):
    v = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    if c < 1000 or c > 9999:
        return False
    while c > 0:
        u = c % 10
        c //= 10
        if v[u] == 1:
            return False
        v[u] = 1
    return True

def check_codes_runners(guess, secret_nr):
    '''
    Checks the number of runners and codes:
     - turns the numbers into strings
     - first checks the number of codes by iterating thorough the strings and checking
     whether the elements on corresponding positions are equal
        - while doing this, it also marks the ones that aren't equal in apparition vectors
     - then it checks the number of runners by iterating through the apparition vectors
    :param guess: the number guessed by the player (4 distinct digits)
    :param secret_nr: the number generated by the computer (4 distinct digits)
    :return: a tuple containing the [codes and runners] integers
    '''
    guess = str(guess)
    secret_nr = str(secret_nr)

    v_guess = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    v_secret = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    codes = 0
    runners = 0

    for i in range(4):
        if guess[i] == secret_nr[i]:
            codes += 1
        else:
            v_guess[int(guess[i])] = 1
            v_secret[int(secret_nr[i])] = 1

    for i in range(10):
        if v_guess[i] == 1 and v_secret[i] == 1:
            runners += 1

    return [codes, runners]

def codes_runners_string (codes, runners):
    return f"computer reports {str(codes)} codes and {str(runners)} runners"

def check_guess(guess, secret_nr):
    cheat_code = 8086
    if guess == cheat_code:
        return f"the secret number is {str(secret_nr)}"
    elif check_nr(guess) == False:
        return "computer wins"
    elif guess == secret_nr:
        return "player wins"
    else:
        [codes, runners] = check_codes_runners(guess, secret_nr)
        return codes_runners_string(codes, runners)

def generate_secret_nr():
    v = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    c1 = randint(1, 9)
    v[c1] = 1
    for i in range(3):
        c2 = randint(0, 9)
        while v[c2] == 1:
            c2 = randint(0, 9)
        v[c2] = 1
        c1 = c1 * 10 + c2
    return c1

#-------------------------------------------------- test for the function that calculates
# the number of codes and runners in the players choice
def assert_codes_runners():
    assert(check_codes_runners(5873, 9624) == [0, 0])
    assert(check_codes_runners(5873, 1234) == [0, 1])
    assert(check_codes_runners(5873, 3257) == [0, 3])
    assert(check_codes_runners(5873, 3875) == [2, 2])
    assert(check_codes_runners(5873, 3758) == [0, 4])
    assert(check_codes_runners(5873, 5873) == [4, 0])

assert_codes_runners()